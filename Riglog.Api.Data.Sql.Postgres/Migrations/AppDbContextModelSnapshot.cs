// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Riglog.Api.Data.Sql;

#nullable disable

namespace Riglog.Api.Data.Sql.Postgres.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.Computer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComputerTypeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OsDistributionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OsEditionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OsFamilyId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("OsVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ComputerTypeId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OsDistributionId");

                    b.HasIndex("OsEditionId");

                    b.HasIndex("OsFamilyId");

                    b.HasIndex("OsVersionId");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.ComputerType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ComputerTypes");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.ComputerUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ComputerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("IsAdmin");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("ComputerUsers");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsDistribution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OsFamilyId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OsFamilyId");

                    b.HasIndex("Name", "OsFamilyId")
                        .IsUnique();

                    b.ToTable("OsDistributions");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsEdition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OsDistributionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OsDistributionId");

                    b.HasIndex("Name", "OsDistributionId")
                        .IsUnique();

                    b.ToTable("OsEditions");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsFamily", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("OsFamilies");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OsDistributionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("OsDistributionId");

                    b.HasIndex("Name", "OsDistributionId")
                        .IsUnique();

                    b.ToTable("OsVersions");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuperAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsDeleted");

                    b.HasIndex("IsSuperAdmin");

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.Computer", b =>
                {
                    b.HasOne("Riglog.Api.Data.Sql.Entities.ComputerType", "ComputerType")
                        .WithMany("Computers")
                        .HasForeignKey("ComputerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Riglog.Api.Data.Sql.Entities.OsDistribution", "OsDistribution")
                        .WithMany("Computers")
                        .HasForeignKey("OsDistributionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Riglog.Api.Data.Sql.Entities.OsEdition", "OsEdition")
                        .WithMany("Computers")
                        .HasForeignKey("OsEditionId");

                    b.HasOne("Riglog.Api.Data.Sql.Entities.OsFamily", "OsFamily")
                        .WithMany("Computers")
                        .HasForeignKey("OsFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Riglog.Api.Data.Sql.Entities.OsVersion", "OsVersion")
                        .WithMany("Computers")
                        .HasForeignKey("OsVersionId");

                    b.Navigation("ComputerType");

                    b.Navigation("OsDistribution");

                    b.Navigation("OsEdition");

                    b.Navigation("OsFamily");

                    b.Navigation("OsVersion");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.ComputerUser", b =>
                {
                    b.HasOne("Riglog.Api.Data.Sql.Entities.Computer", "Computer")
                        .WithMany("ComputerUsers")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Riglog.Api.Data.Sql.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsDistribution", b =>
                {
                    b.HasOne("Riglog.Api.Data.Sql.Entities.OsFamily", "OsFamily")
                        .WithMany("OsDistributions")
                        .HasForeignKey("OsFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OsFamily");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsEdition", b =>
                {
                    b.HasOne("Riglog.Api.Data.Sql.Entities.OsDistribution", "OsDistribution")
                        .WithMany("OsEditions")
                        .HasForeignKey("OsDistributionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OsDistribution");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsVersion", b =>
                {
                    b.HasOne("Riglog.Api.Data.Sql.Entities.OsDistribution", "OsDistribution")
                        .WithMany("OsVersions")
                        .HasForeignKey("OsDistributionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OsDistribution");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.Computer", b =>
                {
                    b.Navigation("ComputerUsers");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.ComputerType", b =>
                {
                    b.Navigation("Computers");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsDistribution", b =>
                {
                    b.Navigation("Computers");

                    b.Navigation("OsEditions");

                    b.Navigation("OsVersions");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsEdition", b =>
                {
                    b.Navigation("Computers");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsFamily", b =>
                {
                    b.Navigation("Computers");

                    b.Navigation("OsDistributions");
                });

            modelBuilder.Entity("Riglog.Api.Data.Sql.Entities.OsVersion", b =>
                {
                    b.Navigation("Computers");
                });
#pragma warning restore 612, 618
        }
    }
}
